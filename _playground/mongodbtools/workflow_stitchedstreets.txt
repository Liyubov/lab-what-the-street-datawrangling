WORKFLOW STITCHED STREETS (OF A CITY)

Overpass
- Get single streets: 
[out:json];
(
  node[highway][name="Krossener Straße"](52.33812, 13.0884, 52.675499, 13.76134);
  way[highway][name="Krossener Straße"](52.33812, 13.0884, 52.675499, 13.76134);
) ;(._;>;);out skel;


Get all street names:
-) Download city osm.bz2 file from geofabrik
-) ./osmfilter berlin-latest.osm --keep="highway=residential =primary =secondary =tertiary =unclassified" --drop="public_transport=stop_position highway=traffic_signals" --ignore-dependencies > temp.osm
-) ./osmconvert temp.osm --all-to-nodes --csv="name" > temp.csv
-) sort -u temp.csv > streetnames.txt


Get OSM data from a city:
-) Get shapefile of city boundary from somewhere
If nowhere to be found, use openstreetmap:
[out:json];
(
  node[boundary="administrative"][admin_level=6](48.46, 8.79, 48.93, 9.50);
  way[boundary="administrative"][admin_level=6](48.46, 8.79, 48.93, 9.50);
) ;(._;>;);out skel;

-) Load into QGIS, save as poly via Vector > Export OSM Poly (if necessary, first save as a duplicate with correct CRS)
-) osmosis --read-xml file=/Users/szellmi/Downloads/berlin-latest.osm --bp file=/Users/szellmi/Google\ Drive/MOOVELLAB/00_Projects/mobviz/data/geo/berlin/berlin_boundary.poly --write-xml file=/Users/szellmi/Downloads/berlin-latest_cropped.osm 



Insert stuff into mongoDB:
-) install mongosm
-) folder structure: add folder node_modules, move all subfolders inside
-) in options.js: populateGeometry: false, database: SET NAME
-) node --max_old_space_size=8192 mongosm.js -f [OSMFILE]
-) set cityname parameter and execute mobviz_generategeometries.ipynb



Also side-streets:

way["name"="Hannoversche Straße"](52.451172, 13.291531,52.587381, 13.518124);
out geom;
node(w);  // get all ways' nodes
way[highway](bn);        // find those highway ways, containing previously found nodes

out geom;